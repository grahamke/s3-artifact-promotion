name: Promote Artifact to S3

on:
  workflow_call:
    inputs:
      app_name:
        required: true
        type: string
      version:
        required: true
        type: string
      artifact_path:
        required: true
        type: string
      bucket_name:
        required: true
        type: string
      aws_region:
        required: true
        type: string
      role_to_assume:
        required: true
        type: string

jobs:
  promote:
    runs-on: ubuntu-latest

    permissions:
      id-token: write
      contents: read

    steps:
      - name: Configure AWS credentials using OIDC
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ inputs.role_to_assume }}
          aws-region: ${{ inputs.aws_region }}

      - name: Promote artifact to S3
        run: |
          set -euo pipefail

          APP_NAME="${{ inputs.app_name }}"
          VERSION="${{ inputs.version }}"
          ARTIFACT_PATH="${{ inputs.artifact_path }}"
          BUCKET_NAME="${{ inputs.bucket_name }}"
          
          LATEST_FILENAME="${APP_NAME}-${VERSION}.jar"
          LATEST_KEY="s3://${BUCKET_NAME}/${APP_NAME}/latest/${LATEST_FILENAME}"
          ARCHIVE_DIR="s3://${BUCKET_NAME}/archive/${APP_NAME}/latest"
          
          echo "üîç Checking for existing latest artifact..."
          EXISTING=$(aws s3 ls "s3://${BUCKET_NAME}/${APP_NAME}/latest/" | awk '{print $4}' | head -n 1 || true)
          
          if [[ -n "$EXISTING" ]]; then
            echo "üì¶ Archiving existing latest: $EXISTING"
              aws s3 mv "s3://${BUCKET_NAME}/${APP_NAME}/latest/${EXISTING}" \
              "${ARCHIVE_DIR}/${EXISTING}"
          else
            echo "‚ÑπÔ∏è No existing latest artifact found. Skipping archive."
          fi
            
          echo "‚¨ÜÔ∏è Uploading new latest: ${LATEST_FILENAME}"
          aws s3 cp "${ARTIFACT_PATH}" "${LATEST_KEY}"
          
          echo "‚úÖ Promotion complete."
